version: "3.8"

services:
  api:
    build: ./
    ports:
      - "5200:5200"
    volumes:
      - ./:/usr/src/app
    depends_on:
      - mongo
      - localstack
      - mongo-express
    networks:
      - app-network
  mongo:
    container_name: "${MONGO_DOCKER_NAME-mongo}"
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - "${MONGO_VOLUME_DIR:-./mongo_data}:/data/db"
    networks:
      - app-network
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - SERVICES=s3
      # - DEFAULT_REGION=us-east-2
      - EDGE_PORT=4566
      - S3_BUCKET_NAME=test-user-images
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEBUG=${DEBUG-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network
  mongo-express:
    container_name: "${MONGO_EXPRESS_DOCKER_NAME-mongo-express}"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
      # ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongo:27017
    depends_on:
      - mongo
    networks:
      - app-network

networks:
  app-network:
    driver: bridge